apiVersion: v1
kind: Template
metadata:
  name: ${NAME}
labels:
  project: ${PROJECT}
  service: ${SERVICE_NAME}
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}
    spec:
      replicas: "${{REPLICAS}}"
      revisionHistoryLimit: 10
      selector:
        deploymentconfig: ${NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: ${NAME}
        spec:
          containers:
            - env:
                - name: VERSION
                  value: ${BUILD_TAG}
                - name: ISSUER
                  value: ${ISSUER}
                - name: PORT
                  value: "${PORT}"
                - name: SERVER_FRONTEND
                  value: ${HOST_NAME}
                - name: SOAM_DISCOVERY
                  valueFrom:
                    secretKeyRef:
                      key: oidc-discovery
                      name: ${DB_SECRET_NAME}
                - name: SOAM_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: oidc-clientId
                      name: ${DB_SECRET_NAME}
                - name: SOAM_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: oidc-clientSecrect
                      name: ${DB_SECRET_NAME}
                - name: UI_PRIVATE_KEY
                  valueFrom:
                    secretKeyRef:
                      key: ui-token-pvt-key
                      name: ${DB_SECRET_NAME}
                - name: UI_PUBLIC_KEY
                  valueFrom:
                    secretKeyRef:
                      key: ui-token-pub-key
                      name: ${DB_SECRET_NAME}
              image: ${IMAGE_REGISTRY}/${BUILD_NAMESPACE}/${IMAGE_STREAM_TAG}
              imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: "${{PORT}}"
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  path: /api/
                  port: "${{PORT}}"
                initialDelaySeconds: 40
                periodSeconds: 30
                timeoutSeconds: 30
              livenessProbe:
                failureThreshold: 10
                httpGet:
                  path: /api/
                  port: "${{PORT}}"
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 30
                timeoutSeconds: 15
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${NAME}
    spec:
      ports:
        - name: http
          port: 80
          targetPort: ${{PORT}}
      selector:
        deploymentconfig: ${NAME}
      type: ClusterIP
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${HOST_NAME}
      path: ${PATH}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}
parameters:
  - name: NAME
    required: true
  - name: PROJECT
    value: sims
  - name: SERVICE_NAME
    value: api
  - name: CPU_LIMIT
    value: "1.0"
  - name: MEMORY_LIMIT
    value: "2000M"
  - name: CPU_REQUEST
    value: "0.5"
  - name: MEMORY_REQUEST
    value: "1000M"
  - name: REPLICAS
    value: "1"
  - name: PORT
    value: "3030"
  - name: IMAGE_STREAM_TAG
    required: true
  - name: BUILD_NAMESPACE
    required: true
  - name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
  - name: HOST_NAME
    required: true
  - name: PATH
    value: "/api/"
  - name: NODE_ENV
    value: "production"
  - name: ISSUER
    value: "ecc-iosas"
  
